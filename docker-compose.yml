services:
  habits:
    container_name: habits
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - ./.env
    volumes:
      - .:/habits
      - static_volume:/habits/staticfiles
    ports:
      - "8000:8000"
    networks:
      - habits_network
    depends_on:
      db_habits:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/nginx/staticfiles
    depends_on:
      - habits
    networks:
      - habits_network

  db_habits:
    container_name: db_habits
    image: postgres:15.10
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - habits_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 3s
      retries: 5

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    environment:
      - REDIS_HOST=redis
    networks:
      - habits_network
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 3s
      retries: 5
    depends_on:
      - db_habits

  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/habits
    env_file:
      - ./.env
    networks:
      - habits_network
    depends_on:
      - habits
      - redis

  celery_beat:
    container_name: celery_beat
    build: .
    command: celery -A config beat --scheduler django -l info
    volumes:
      - .:/habits
    env_file:
      - ./.env
    networks:
      - habits_network
    depends_on:
      celery_worker:
        condition: service_started


networks:
  habits_network:
    name: habits_network

volumes:
  postgres_data:
  static_volume:
  redis_data: