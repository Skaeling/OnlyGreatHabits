name: Django CI

on: [ push, pull_request ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 .

  test:
    needs: lint
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Redis
        run: |
          for i in {1..30}; do
            if nc -z redis 6379; then
              echo "Redis is up!"
              exit 0
            fi
            echo "Waiting for Redis..."
            sleep 1
          done
          echo "Redis did not start in time!" && exit 1

      - name: View Redis logs
        run: |
          docker-compose logs redis

      - name: Run tests
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          LOCATION: 'redis://redis:6379'
          CELERY_BROKER_URL: 'redis://redis:6379'
          CELERY_RESULT_BACKEND: 'redis://redis:6379'
        run: python manage.py test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in Docker hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/ogh:${{ github.sha }} .

      - name: Push Docker image in Docker hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ogh:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_key }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          docker rmi ogh || true
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/ogh:${{ github.sha }}
          docker stop ogh || true
          docker rm ogh || true
          docker run --env-file ${{ secrets.DEPLOY_DIR }}/.env -d --name habits -p 80:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/ogh:${{ github.sha }}
          EOF